{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Frizzy Electronics Wiki Frizzy Elemental Kit Plataformas Arduino Raspberry Beaglebone Grape Sensores Actuadores Displays Comunicacion Otros Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Frizzy's Wiki"},{"location":"#frizzy-electronics-wiki","text":"","title":"Frizzy Electronics Wiki"},{"location":"#frizzy-elemental-kit","text":"","title":"Frizzy Elemental Kit"},{"location":"#plataformas","text":"Arduino Raspberry Beaglebone","title":"Plataformas"},{"location":"#grape","text":"Sensores Actuadores Displays Comunicacion Otros","title":"Grape"},{"location":"#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"actuador/","text":"","title":"Actuador"},{"location":"arduino/","text":"Arduino","title":"Arduino"},{"location":"arduino/#arduino","text":"","title":"Arduino"},{"location":"bluetooth/","text":"Elemental Kit - Bluetooth HC-05 El m\u00f3dulo bluetooth incorpora el famoso m\u00f3dulo HC-05. Este m\u00f3dulo nos permite crear un t\u00fanel serie sin cables. En otras palabras, nos permite conectarnos a otro dispositivo mediante comunicaci\u00f3n serie de manera inal\u00e1mbrica. Podr\u00e1s conectarte a tu m\u00f3vil, a una tablet, un pc, incluso puedes conectar dos placas Grape para que se manden informaci\u00f3n entre ellas. El m\u00f3dulo soporta tanto 3.3V como 5V por lo que no necesitas ningun conversor de nivel para hacer tus proyectos. Caracter\u00edsticas Modulo HC05 Maestro-Esclavo Bluetooth 2.0 Chipset CSR BC417143 Tensi\u00f3n de entrada de 3.3 a 5V Banda 2.4GHz ~ 2.48GHz Contrase\u00f1a por defecto: 1234 ##Primeros pasos Las funcionalidades de los pines son las siguientes: Pin Funci\u00f3n EN Enciende o apaga el LDO VCC VCC GND GND TX Transmisi\u00f3n de datos RX Recepci\u00f3n de datos STATE Estado del m\u00f3dulo El pin EN de ENABLE, sirve para activar o desactivar el m\u00f3dulo. Si lo dejamos al aire o lo conectamos a LOW, el m\u00f3dulo permanecera activo, mientras que si conectamos a HIGH, apagaremos el m\u00f3dulo. Esto es realmente \u00fatil a la hora de apagar o encender el m\u00f3dulo con nuestra Grape o Arduino , ya que, conect\u00e1ndolo a un pin digital podremos activar o desactivar el bluetooth. El pin STATE lo podemos utilizar para recibir feedback de nuestro m\u00f3dulo. Podemos conectar este pin a un pin de nuestra Grape y leerlo para saber si el m\u00f3dulo ha establecido comunicaci\u00f3n o no. Si el m\u00f3dulo esta conectado, por ejemplo, a tu m\u00f3vil, este pin nos devolver\u00e1 un HIGH y si no lo est\u00e1, un LOW. \u00bf\u00datil no? Desde nuestro microcontrolador podremos saber si esta conectado o no! Grape La conexi\u00f3n del m\u00f3dulo bluetooth a la grape es muy sencilla, simplemente tienes que alimentar el modulo con 5V con los respectivos pines GND-VCC y conectar el TX de la placa al RX del m\u00f3dulo y el RX de la placa al TX del m\u00f3dulo. Al establecer esta conexi\u00f3n, si el m\u00f3dulo esta conectado, por ejemplo con nuestro m\u00f3vil, nos imposibilita subir un nuevo sketch. Para solucionar esto, crearemos un puerto serie virtual con la ayuda de la librer\u00eda \"SoftwareSerial.h\" inclu\u00edda por defecto en nuestro Arduino IDE. #include <SoftwareSerial.h> //Incluimos la libreria software serial para crear nuestro puerto virtual #define RXPin 9 //Definimos el pin RX en el 9, el cual conectamos al TX del modulo #define TXPin 10 //Definimos el pin TX en el 10, el cual conectamos al RX del modulo SoftwareSerial nuevo_serial ( RXPin , TXPin ); char dato = 0 ; void setup () { nuevo_serial . begin ( 9600 ); pinMode ( 13 , OUTPUT ); } void loop () { while ( nuevo_serial . available () > 0 ) { dato = nuevo_serial . read (); if ( dato == '1' ){ digitalWrite ( 13 , HIGH ); } else { digitalWrite ( 13 , LOW ); } } } ##Recursos Datasheet Archivos PCB en KiCAD Esquema en PDF Fritzing Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"M\u00f3dulo bluetooth"},{"location":"bluetooth/#elemental-kit-bluetooth-hc-05","text":"El m\u00f3dulo bluetooth incorpora el famoso m\u00f3dulo HC-05. Este m\u00f3dulo nos permite crear un t\u00fanel serie sin cables. En otras palabras, nos permite conectarnos a otro dispositivo mediante comunicaci\u00f3n serie de manera inal\u00e1mbrica. Podr\u00e1s conectarte a tu m\u00f3vil, a una tablet, un pc, incluso puedes conectar dos placas Grape para que se manden informaci\u00f3n entre ellas. El m\u00f3dulo soporta tanto 3.3V como 5V por lo que no necesitas ningun conversor de nivel para hacer tus proyectos.","title":"Elemental Kit - Bluetooth HC-05"},{"location":"bluetooth/#caracteristicas","text":"Modulo HC05 Maestro-Esclavo Bluetooth 2.0 Chipset CSR BC417143 Tensi\u00f3n de entrada de 3.3 a 5V Banda 2.4GHz ~ 2.48GHz Contrase\u00f1a por defecto: 1234","title":"Caracter\u00edsticas"},{"location":"bluetooth/#primeros-pasos","text":"Las funcionalidades de los pines son las siguientes: Pin Funci\u00f3n EN Enciende o apaga el LDO VCC VCC GND GND TX Transmisi\u00f3n de datos RX Recepci\u00f3n de datos STATE Estado del m\u00f3dulo El pin EN de ENABLE, sirve para activar o desactivar el m\u00f3dulo. Si lo dejamos al aire o lo conectamos a LOW, el m\u00f3dulo permanecera activo, mientras que si conectamos a HIGH, apagaremos el m\u00f3dulo. Esto es realmente \u00fatil a la hora de apagar o encender el m\u00f3dulo con nuestra Grape o Arduino , ya que, conect\u00e1ndolo a un pin digital podremos activar o desactivar el bluetooth. El pin STATE lo podemos utilizar para recibir feedback de nuestro m\u00f3dulo. Podemos conectar este pin a un pin de nuestra Grape y leerlo para saber si el m\u00f3dulo ha establecido comunicaci\u00f3n o no. Si el m\u00f3dulo esta conectado, por ejemplo, a tu m\u00f3vil, este pin nos devolver\u00e1 un HIGH y si no lo est\u00e1, un LOW. \u00bf\u00datil no? Desde nuestro microcontrolador podremos saber si esta conectado o no!","title":"##Primeros pasos"},{"location":"bluetooth/#grape","text":"La conexi\u00f3n del m\u00f3dulo bluetooth a la grape es muy sencilla, simplemente tienes que alimentar el modulo con 5V con los respectivos pines GND-VCC y conectar el TX de la placa al RX del m\u00f3dulo y el RX de la placa al TX del m\u00f3dulo. Al establecer esta conexi\u00f3n, si el m\u00f3dulo esta conectado, por ejemplo con nuestro m\u00f3vil, nos imposibilita subir un nuevo sketch. Para solucionar esto, crearemos un puerto serie virtual con la ayuda de la librer\u00eda \"SoftwareSerial.h\" inclu\u00edda por defecto en nuestro Arduino IDE. #include <SoftwareSerial.h> //Incluimos la libreria software serial para crear nuestro puerto virtual #define RXPin 9 //Definimos el pin RX en el 9, el cual conectamos al TX del modulo #define TXPin 10 //Definimos el pin TX en el 10, el cual conectamos al RX del modulo SoftwareSerial nuevo_serial ( RXPin , TXPin ); char dato = 0 ; void setup () { nuevo_serial . begin ( 9600 ); pinMode ( 13 , OUTPUT ); } void loop () { while ( nuevo_serial . available () > 0 ) { dato = nuevo_serial . read (); if ( dato == '1' ){ digitalWrite ( 13 , HIGH ); } else { digitalWrite ( 13 , LOW ); } } }","title":"Grape"},{"location":"bluetooth/#recursos","text":"Datasheet Archivos PCB en KiCAD Esquema en PDF Fritzing","title":"##Recursos"},{"location":"bluetooth/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"bluetooth/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"boton/","text":"Elemental Kit - Bot\u00f3n El m\u00f3dulo de bot\u00f3n es un peque\u00f1o switch momentaneo de 12mm. Contiene el propio switch de dos posiciones \"on/off\" y su correspondiente resistencia pull-up. Cuando el bot\u00f3n es presionado, devuelve LOW y cuando lo sueltas devuelve HIGH. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape . Caracter\u00edsticas Bot\u00f3n f\u00e1cil de usar Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye la resistencia pull-up ##Primeros pasos Grape Grape Elemental - Boton GND Negro 5V Rojo D2 Amarillo const int pinBoton = 2 ; // Pin del bot\u00f3n const int ledPin = 13 ; // Pin del Led int estadoBoton = 0 ; // variable para leer el estado del bot\u00f3n void setup () { // inicializamos el led como salida pinMode ( ledPin , OUTPUT ); // inicializamos el boton como entrada pinMode ( pinBoton , INPUT ); } void loop (){ // leemos el estado del boton y lo almacenamos en nuestra variable estadoBoton = digitalRead ( pinBoton ); // comprueba si se ha pulsado el boton // si se ha pulsado el estado es LOW if ( estadoBoton == LOW ) { // encendemos el led digitalWrite ( ledPin , HIGH ); } else { //apagamos el led digitalWrite ( ledPin , LOW ); } } ##Recursos Archivos PCB en KiCAD Esquema en PDF Fritzing Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Boton"},{"location":"boton/#elemental-kit-boton","text":"El m\u00f3dulo de bot\u00f3n es un peque\u00f1o switch momentaneo de 12mm. Contiene el propio switch de dos posiciones \"on/off\" y su correspondiente resistencia pull-up. Cuando el bot\u00f3n es presionado, devuelve LOW y cuando lo sueltas devuelve HIGH. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape .","title":"Elemental Kit - Bot\u00f3n"},{"location":"boton/#caracteristicas","text":"Bot\u00f3n f\u00e1cil de usar Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye la resistencia pull-up","title":"Caracter\u00edsticas"},{"location":"boton/#primeros-pasos","text":"","title":"##Primeros pasos"},{"location":"boton/#grape","text":"Grape Elemental - Boton GND Negro 5V Rojo D2 Amarillo const int pinBoton = 2 ; // Pin del bot\u00f3n const int ledPin = 13 ; // Pin del Led int estadoBoton = 0 ; // variable para leer el estado del bot\u00f3n void setup () { // inicializamos el led como salida pinMode ( ledPin , OUTPUT ); // inicializamos el boton como entrada pinMode ( pinBoton , INPUT ); } void loop (){ // leemos el estado del boton y lo almacenamos en nuestra variable estadoBoton = digitalRead ( pinBoton ); // comprueba si se ha pulsado el boton // si se ha pulsado el estado es LOW if ( estadoBoton == LOW ) { // encendemos el led digitalWrite ( ledPin , HIGH ); } else { //apagamos el led digitalWrite ( ledPin , LOW ); } }","title":"Grape"},{"location":"boton/#recursos","text":"Archivos PCB en KiCAD Esquema en PDF Fritzing","title":"##Recursos"},{"location":"boton/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"boton/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"buzzer/","text":"Elemental Kit - Buzzer El m\u00f3dulo buzzer consta de un zumbador pasivo con el que puedes reproducir tonos. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape . Caracter\u00edsticas Buzzer pasivo Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye transistor de control ##Primeros pasos Grape Grape Elemental - Buzzer GND Negro 5V Rojo D9 Amarillo const int buzzerPin = 9 ; // Pin del zumbador void setup () { pinMode ( buzzerPin , OUTPUT ); //Declaramos el pin del buzzer como salida } void loop (){ tone ( buzzerPin , 1000 , 100 ); //Reproducimos un tono de 1000Hz de 100ms tone ( buzzerPin , 2000 , 1000 ); //Reproducimos un tono de 2000Hz de 1000ms } ##Recursos Archivos PCB en KiCAD Esquema en PDF Fritzing Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Buzzer"},{"location":"buzzer/#elemental-kit-buzzer","text":"El m\u00f3dulo buzzer consta de un zumbador pasivo con el que puedes reproducir tonos. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape .","title":"Elemental Kit - Buzzer"},{"location":"buzzer/#caracteristicas","text":"Buzzer pasivo Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye transistor de control","title":"Caracter\u00edsticas"},{"location":"buzzer/#primeros-pasos","text":"","title":"##Primeros pasos"},{"location":"buzzer/#grape","text":"Grape Elemental - Buzzer GND Negro 5V Rojo D9 Amarillo const int buzzerPin = 9 ; // Pin del zumbador void setup () { pinMode ( buzzerPin , OUTPUT ); //Declaramos el pin del buzzer como salida } void loop (){ tone ( buzzerPin , 1000 , 100 ); //Reproducimos un tono de 1000Hz de 100ms tone ( buzzerPin , 2000 , 1000 ); //Reproducimos un tono de 2000Hz de 1000ms }","title":"Grape"},{"location":"buzzer/#recursos","text":"Archivos PCB en KiCAD Esquema en PDF Fritzing","title":"##Recursos"},{"location":"buzzer/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"buzzer/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"comm/","text":"","title":"Comm"},{"location":"display/","text":"","title":"Display"},{"location":"grape/","text":"Elemental Kit - Grape La Frizzy Electronics Grape es una placa de desarrollo basada en el microcontrolador ATMEGA329P-AU de 8bits de la familia AVR. La placa Grape posee 14 pines digitales configurables como entrada o salida de los cuales 6 pueden ser usados como salidas PWM y 8 entradas analogicas. Como principal caracteristica de la Grape nos encontramos con que posee pines de conexi\u00f3n rapida los cuales ya incorporan alimentaci\u00f3n y se\u00f1al, evitando as\u00ed el uso de las molestas protoboard. Tienes todo un ecosistema de m\u00f3dulos Atom que puedes conectar. La placa es totalmente compatible con el Arduino UNO tanto en el uso de sus shields como en la posici\u00f3n de los agujeros de montaje. Incorporta un conector JST de 4 pines para conectar dispositivos I2C del ecosistema Atom como una pantalla Oled o una matriz led. Es capaz de soportar de continuo 2A de corriente por lo que no tendras ning\u00fan problema a la hora de hacer robots que usen varios servos, por ejemplo. Caracter\u00edsticas Caracter\u00edstica Valor Microcontrolador Atmega328P-AU Memoria Flash 32KB Memoria SRAM 1KB Digital I/O 14 Entradas Analogicas 8 Salidas PWM 6 Tensi\u00f3n de alimentacion 7-23 V DC Corriente m\u00e1xima 800 mA (3.3A) 2A (5V) Conversor USB-UART FT231XS ##Primeros pasos Para comenzar a usar nuestra placa Grape, lo primero que necesitaremos ser\u00e1 descargar el IDE de Arduino. Para descargarlo, iremos a la web oficial de Arduino www.arduino.cc y en la pesta\u00f1a Software>Dowloads nos descargaremos el IDE para nuestra versi\u00f3n de sistema operativo. El IDE es totalmente gratuito, pero desde aqu\u00ed hacemos un llamamiendo a las donaciones para contribuir con el proyecto Arduino. Si alguno est\u00e1 interesado en donar al descargarlo, puede hacerlo seleccionando la cantidad a donar. Tambi\u00e9n puedes comprar alguna de sus placas para apoyarles. Una vez instalado en tu ordenador, abriremos la aplicaci\u00f3n. Vamos a crear el primer programa conocido como \"hola mundo\". En el mundo de Arduino esto se conoce como Blynk, ya que la forma que tendr\u00e1 la placa de decirnos \"hola\" ser\u00e1 haciendo parpadear un led. Podemos escribir nosotros mismos el codigo o podemos abrir un ejemplo ya escrito como te ense\u00f1amos a continuaci\u00f3n. En este c\u00f3digo, lo que haremos ser\u00e1 hacer parpadear el led conectado al pin 13, por lo que no necesitamos ning\u00fan m\u00f3dulo Atom externo ni hardware adicional, viene ya con nuestra placa Grape, por lo que siempre que nuestro pin digital 13 est\u00e9 en modo HIGH, veremos encendido este led. Este led le podemos encontrar cerca del pin 13 con la serigraf\u00eda \"D13\" y cuando lo encendamos se iluminar\u00e1 de color azul. Es ahora cuando conectaremos nuestra Grape al ordenador mediante el cable micro-USB. Para subir el programa a la placa, debemos selecionar el modelo Arduino Nano en Herramientas > Placa > Arduino Nano, y el puerto COM en el que se encuentra nuestra placa mediante Herramientas > Puerto. Si quieres copiar el c\u00f3digo aqu\u00ed lo tienes: const int ledPin = 13 ; // Pin del Led void setup () { // Inicializamos el led como salida pinMode ( ledPin , OUTPUT ); } void loop (){ digitalWrite ( ledPin , HIGH ); //Encendemos el led delay ( 1000 ); //Esperamos 1 segundo digitalWrite ( ledPin , LOW ); //Apagamos el led delay ( 1000 ); //Esperamos 1 segundo } Y si todo ha ido bien...\u00a1deber\u00edas tener el led parpadeando! Drivers Nuestra placa Grape incorpora el conversor USB-UART FT231XS el cual es reconocido por la mayor\u00eda de sistemas operativos de manera nativa, por lo que no deber\u00edas tener ning\u00fan problema a la hora de que tu placa sea detectada por tu ordenador sin nedesidad de drivers, uses el sistema operativo que uses (Windows, Mac OS X o LinuX) Si por alg\u00fan motivo tienes problemas y tu ordenador no detecta tu placa, te ense\u00f1amos a instalar los drivers. Debes descargarte los drivers de la web del fabricante . Una vez ah\u00ed descargate la versi\u00f3n que corresponda para tu sistema operativo e instalalos en tu m\u00e1quina. ##Recursos Datasheet Atmega Fritzing Archivos Esquema en PDF Drivers USB Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Grape"},{"location":"grape/#elemental-kit-grape","text":"La Frizzy Electronics Grape es una placa de desarrollo basada en el microcontrolador ATMEGA329P-AU de 8bits de la familia AVR. La placa Grape posee 14 pines digitales configurables como entrada o salida de los cuales 6 pueden ser usados como salidas PWM y 8 entradas analogicas. Como principal caracteristica de la Grape nos encontramos con que posee pines de conexi\u00f3n rapida los cuales ya incorporan alimentaci\u00f3n y se\u00f1al, evitando as\u00ed el uso de las molestas protoboard. Tienes todo un ecosistema de m\u00f3dulos Atom que puedes conectar. La placa es totalmente compatible con el Arduino UNO tanto en el uso de sus shields como en la posici\u00f3n de los agujeros de montaje. Incorporta un conector JST de 4 pines para conectar dispositivos I2C del ecosistema Atom como una pantalla Oled o una matriz led. Es capaz de soportar de continuo 2A de corriente por lo que no tendras ning\u00fan problema a la hora de hacer robots que usen varios servos, por ejemplo.","title":"Elemental Kit - Grape"},{"location":"grape/#caracteristicas","text":"Caracter\u00edstica Valor Microcontrolador Atmega328P-AU Memoria Flash 32KB Memoria SRAM 1KB Digital I/O 14 Entradas Analogicas 8 Salidas PWM 6 Tensi\u00f3n de alimentacion 7-23 V DC Corriente m\u00e1xima 800 mA (3.3A) 2A (5V) Conversor USB-UART FT231XS","title":"Caracter\u00edsticas"},{"location":"grape/#primeros-pasos","text":"Para comenzar a usar nuestra placa Grape, lo primero que necesitaremos ser\u00e1 descargar el IDE de Arduino. Para descargarlo, iremos a la web oficial de Arduino www.arduino.cc y en la pesta\u00f1a Software>Dowloads nos descargaremos el IDE para nuestra versi\u00f3n de sistema operativo. El IDE es totalmente gratuito, pero desde aqu\u00ed hacemos un llamamiendo a las donaciones para contribuir con el proyecto Arduino. Si alguno est\u00e1 interesado en donar al descargarlo, puede hacerlo seleccionando la cantidad a donar. Tambi\u00e9n puedes comprar alguna de sus placas para apoyarles. Una vez instalado en tu ordenador, abriremos la aplicaci\u00f3n. Vamos a crear el primer programa conocido como \"hola mundo\". En el mundo de Arduino esto se conoce como Blynk, ya que la forma que tendr\u00e1 la placa de decirnos \"hola\" ser\u00e1 haciendo parpadear un led. Podemos escribir nosotros mismos el codigo o podemos abrir un ejemplo ya escrito como te ense\u00f1amos a continuaci\u00f3n. En este c\u00f3digo, lo que haremos ser\u00e1 hacer parpadear el led conectado al pin 13, por lo que no necesitamos ning\u00fan m\u00f3dulo Atom externo ni hardware adicional, viene ya con nuestra placa Grape, por lo que siempre que nuestro pin digital 13 est\u00e9 en modo HIGH, veremos encendido este led. Este led le podemos encontrar cerca del pin 13 con la serigraf\u00eda \"D13\" y cuando lo encendamos se iluminar\u00e1 de color azul. Es ahora cuando conectaremos nuestra Grape al ordenador mediante el cable micro-USB. Para subir el programa a la placa, debemos selecionar el modelo Arduino Nano en Herramientas > Placa > Arduino Nano, y el puerto COM en el que se encuentra nuestra placa mediante Herramientas > Puerto. Si quieres copiar el c\u00f3digo aqu\u00ed lo tienes: const int ledPin = 13 ; // Pin del Led void setup () { // Inicializamos el led como salida pinMode ( ledPin , OUTPUT ); } void loop (){ digitalWrite ( ledPin , HIGH ); //Encendemos el led delay ( 1000 ); //Esperamos 1 segundo digitalWrite ( ledPin , LOW ); //Apagamos el led delay ( 1000 ); //Esperamos 1 segundo } Y si todo ha ido bien...\u00a1deber\u00edas tener el led parpadeando!","title":"##Primeros pasos"},{"location":"grape/#drivers","text":"Nuestra placa Grape incorpora el conversor USB-UART FT231XS el cual es reconocido por la mayor\u00eda de sistemas operativos de manera nativa, por lo que no deber\u00edas tener ning\u00fan problema a la hora de que tu placa sea detectada por tu ordenador sin nedesidad de drivers, uses el sistema operativo que uses (Windows, Mac OS X o LinuX) Si por alg\u00fan motivo tienes problemas y tu ordenador no detecta tu placa, te ense\u00f1amos a instalar los drivers. Debes descargarte los drivers de la web del fabricante . Una vez ah\u00ed descargate la versi\u00f3n que corresponda para tu sistema operativo e instalalos en tu m\u00e1quina.","title":"Drivers"},{"location":"grape/#recursos","text":"Datasheet Atmega Fritzing Archivos Esquema en PDF Drivers USB","title":"##Recursos"},{"location":"grape/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"grape/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"intro/","text":"","title":"Introducci\u00f3n"},{"location":"keypad/","text":"Elemental Kit - M\u00f3dulo Keypad El m\u00f3dulo keypad contiene cuatro interruptores de 12mm conectados a cutro resistencias con diferentes valores para que puedas operar los 4 botones \u00a1con solo un pin analogico de tu placa! El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape . Caracter\u00edsticas 4 botones de diferentes colores Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye una resistencia diferente para cada bot\u00f3n ##Primeros pasos Grape Grape Elemental - keypad GND Negro 5V Rojo A2 Amarillo void setup () { Serial . begin ( 9600 ); //Iniciamos el puerto serie a 9600 baudios } void loop (){ // leemos el estado de nuestra botonera y lo almacenamos en la variable botonera = analogRead ( A2 ); Serial . println ( botonera ); } ##Recursos Archivos PCB en KiCAD Esquema en PDF Fritzing Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Keypad"},{"location":"keypad/#elemental-kit-modulo-keypad","text":"El m\u00f3dulo keypad contiene cuatro interruptores de 12mm conectados a cutro resistencias con diferentes valores para que puedas operar los 4 botones \u00a1con solo un pin analogico de tu placa! El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape .","title":"Elemental Kit - M\u00f3dulo Keypad"},{"location":"keypad/#caracteristicas","text":"4 botones de diferentes colores Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye una resistencia diferente para cada bot\u00f3n","title":"Caracter\u00edsticas"},{"location":"keypad/#primeros-pasos","text":"","title":"##Primeros pasos"},{"location":"keypad/#grape","text":"Grape Elemental - keypad GND Negro 5V Rojo A2 Amarillo void setup () { Serial . begin ( 9600 ); //Iniciamos el puerto serie a 9600 baudios } void loop (){ // leemos el estado de nuestra botonera y lo almacenamos en la variable botonera = analogRead ( A2 ); Serial . println ( botonera ); }","title":"Grape"},{"location":"keypad/#recursos","text":"Archivos PCB en KiCAD Esquema en PDF Fritzing","title":"##Recursos"},{"location":"keypad/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"keypad/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"ldr/","text":"Elemental Kit - LDR El m\u00f3dulo de LDR consta de un peque\u00f1o fotorresistor de 10k engarcado de captar el nivel de luz ambiente y devolvertelo en funcion de la tensi\u00f3n. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape . Caracter\u00edsticas M\u00f3dulo f\u00e1cil de usar Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye el divisor resistivo ##Primeros pasos Grape Grape Elemental - LDR GND Negro 5V Rojo A2 Amarillo void setup () { //Inicializamos el puerto serie 9600 baudios Serial . begin ( 9600 ); } void loop (){ // Leemos el sensor y lo asignamos a la variable luz luz = analogRead ( A2 ); Serial . print ( \"El nivel de luz es de:\" ); Serial . println ( luz ); } ##Recursos Archivos PCB en KiCAD Esquema en PDF Fritzing Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Sensor de luz"},{"location":"ldr/#elemental-kit-ldr","text":"El m\u00f3dulo de LDR consta de un peque\u00f1o fotorresistor de 10k engarcado de captar el nivel de luz ambiente y devolvertelo en funcion de la tensi\u00f3n. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape .","title":"Elemental Kit - LDR"},{"location":"ldr/#caracteristicas","text":"M\u00f3dulo f\u00e1cil de usar Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye el divisor resistivo","title":"Caracter\u00edsticas"},{"location":"ldr/#primeros-pasos","text":"","title":"##Primeros pasos"},{"location":"ldr/#grape","text":"Grape Elemental - LDR GND Negro 5V Rojo A2 Amarillo void setup () { //Inicializamos el puerto serie 9600 baudios Serial . begin ( 9600 ); } void loop (){ // Leemos el sensor y lo asignamos a la variable luz luz = analogRead ( A2 ); Serial . print ( \"El nivel de luz es de:\" ); Serial . println ( luz ); }","title":"Grape"},{"location":"ldr/#recursos","text":"Archivos PCB en KiCAD Esquema en PDF Fritzing","title":"##Recursos"},{"location":"ldr/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"ldr/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"led/","text":"Elemental Kit - M\u00f3dulo LED El m\u00f3dulo contiene un LED de 10mm muy util para tus primeros proyectos de electr\u00f3nica o como indicador en tus proyectos m\u00e1s avanzados. Hemos a\u00f1adido un peque\u00f1o transistor para reducir el consumo, de esta manera el LED es alimentado directamente por los 5V de alimentaci\u00f3n y no por el pin del microcontrolador como en la mayor\u00eda de los montajes que puedes encontrar en Internet. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape . Caracter\u00edsticas Led de gran tama\u00f1o Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye la resistencia limitadora ##Primeros pasos Grape Grape Elemental - LED GND Negro 5V Rojo D2 Amarillo const int ledPin = 2 ; // Pin del Led void setup () { // Inicializamos el led como salida pinMode ( ledPin , OUTPUT ); } void loop (){ digitalWrite ( ledPin , HIGH ); //Encendemos el led delay ( 1000 ); //Esperamos 1 segundo digitalWrite ( ledPin , LOW ); //Apagamos el led delay ( 1000 ); //Esperamos 1 segundo } ##Recursos Archivos PCB en KiCAD Esquema en PDF Fritzing Rojo Fritzing Verde Fritzing Azul Fritzing Amarillo Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Led"},{"location":"led/#elemental-kit-modulo-led","text":"El m\u00f3dulo contiene un LED de 10mm muy util para tus primeros proyectos de electr\u00f3nica o como indicador en tus proyectos m\u00e1s avanzados. Hemos a\u00f1adido un peque\u00f1o transistor para reducir el consumo, de esta manera el LED es alimentado directamente por los 5V de alimentaci\u00f3n y no por el pin del microcontrolador como en la mayor\u00eda de los montajes que puedes encontrar en Internet. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape .","title":"Elemental Kit - M\u00f3dulo LED"},{"location":"led/#caracteristicas","text":"Led de gran tama\u00f1o Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye la resistencia limitadora","title":"Caracter\u00edsticas"},{"location":"led/#primeros-pasos","text":"","title":"##Primeros pasos"},{"location":"led/#grape","text":"Grape Elemental - LED GND Negro 5V Rojo D2 Amarillo const int ledPin = 2 ; // Pin del Led void setup () { // Inicializamos el led como salida pinMode ( ledPin , OUTPUT ); } void loop (){ digitalWrite ( ledPin , HIGH ); //Encendemos el led delay ( 1000 ); //Esperamos 1 segundo digitalWrite ( ledPin , LOW ); //Apagamos el led delay ( 1000 ); //Esperamos 1 segundo }","title":"Grape"},{"location":"led/#recursos","text":"Archivos PCB en KiCAD Esquema en PDF Fritzing Rojo Fritzing Verde Fritzing Azul Fritzing Amarillo","title":"##Recursos"},{"location":"led/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"led/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"linefollower/","text":"Elemental Kit - M\u00f3dulo Infrarrojo El m\u00f3dulo de infrarrojos consta de un peque\u00f1o fotosensor TCRT5000 que incorpora un emisor de infrarrojos y un fototransistor engarcado de captar el haz infrarrojo si rebota en un objeto. Este modulo es realmente \u00fatil para proyectos como un robot sigue-lineas o una alarma para la puerta. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape . Caracter\u00edsticas Sensor PCRT5000 Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Salida digital Incluye potenci\u00f3metro de ajuste de sensibilidad ##Primeros pasos Grape Grape Elemental - Infrared GND Negro 5V Rojo D2 Amarillo void setup () { //Inicializamos el puerto serie 9600 baudios Serial . begin ( 9600 ); //Iniciamos el pin del sensor como entrada pinMode ( 2 , INPUT ); } void loop (){ // Leemos el sensor y lo asignamos a la variable sensor sensor = digitalRead ( 2 ); Serial . print ( \"El estado del sensor es:\" ); if ( sensor == HIGH ){ Serial . println ( \"Activado!\" ); } else { Serial . println ( \"Desactivado...\" ); } } ##Recursos Datasheet fotosensor Archivos PCB en KiCAD Esquema en PDF Fritzing Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Sensor siguelineas"},{"location":"linefollower/#elemental-kit-modulo-infrarrojo","text":"El m\u00f3dulo de infrarrojos consta de un peque\u00f1o fotosensor TCRT5000 que incorpora un emisor de infrarrojos y un fototransistor engarcado de captar el haz infrarrojo si rebota en un objeto. Este modulo es realmente \u00fatil para proyectos como un robot sigue-lineas o una alarma para la puerta. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape .","title":"Elemental Kit - M\u00f3dulo Infrarrojo"},{"location":"linefollower/#caracteristicas","text":"Sensor PCRT5000 Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Salida digital Incluye potenci\u00f3metro de ajuste de sensibilidad","title":"Caracter\u00edsticas"},{"location":"linefollower/#primeros-pasos","text":"","title":"##Primeros pasos"},{"location":"linefollower/#grape","text":"Grape Elemental - Infrared GND Negro 5V Rojo D2 Amarillo void setup () { //Inicializamos el puerto serie 9600 baudios Serial . begin ( 9600 ); //Iniciamos el pin del sensor como entrada pinMode ( 2 , INPUT ); } void loop (){ // Leemos el sensor y lo asignamos a la variable sensor sensor = digitalRead ( 2 ); Serial . print ( \"El estado del sensor es:\" ); if ( sensor == HIGH ){ Serial . println ( \"Activado!\" ); } else { Serial . println ( \"Desactivado...\" ); } }","title":"Grape"},{"location":"linefollower/#recursos","text":"Datasheet fotosensor Archivos PCB en KiCAD Esquema en PDF Fritzing","title":"##Recursos"},{"location":"linefollower/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"linefollower/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"motor/","text":"Elemental Kit - Motor Controller El m\u00f3dulo Motor Controller es una peque\u00f1a placa capaz de controlar 2 motores de corriente continua o un motor paso a paso gracias a sus dos drivers integrados L9110. Puedes controlar motores de corriente continua con un consumo continuado de 800mA con total tranquilidad y puede soportar picos de entre 1.5A y 2A aunque no recomendamos nunca llegar a esas cifras. As\u00ed mismo, el driver tambi\u00e9n incluye diodos de protecci\u00f3n. El m\u00f3dulo cuenta con dos conectores para sus dos respectivos motores, dos pines de alimentaci\u00f3n con los que puedes alimentar el modulo de manera independiente para no da\u00f1ar tu arduino y 4 conectores de se\u00f1al para manejar los motores con tu Grape . Caracter\u00edsticas F\u00e1cil de contectar 800mA de corriente Capaz de controlar dos motores Tensi\u00f3n de entrada de 2.5V a 12V ##Primeros pasos Para controlar los motores, podremos usar pines digitales con o sin PWM, la diferencia la tendremos en la capacidad de control de estos. Sin PWM, solo podremos encender o apagar el motor pero en ningun caso podremos controlar la velocidad de los motores. Dependiendo del proyecto en el que est\u00e9s te convendr\u00e1 usarlo de una manera o de otra, por ejemplo, para un robot siguelineas necesitaremos controlar la velocidad para que siga la linea con m\u00e1s suavidad, mientras que para encender un ventilador no tendriamos por que necesitar controlar la velocidad, solo su encendido. El funcionamiento del controlador es el siguiente: M1 - A M1 - B Motor 1 LOW LOW APAGADO HIGH LOW ADELANTE LOW HIGH ATR\u00c1S HIGH HIGH APAGADO M2 - A M2 - B Motor 2 LOW LOW APAGADO HIGH LOW ADELANTE LOW HIGH ATR\u00c1S HIGH HIGH APAGADO Grape Ya que nuestra placa Grape puede aguantar hasta 2A de corriente, puedes conectar sin problemas la alimentaci\u00f3n del m\u00f3dulo directamente a los 5V de la placa. En el caso de necesitar m\u00e1s velocidad o no disponer de una placa que aguante esta corriente, recomedamos que lo alimentes a parte compartiendo las tierras, tal y como describe siguiente diagrama: Grape Elemental - Motor Gontroller GND GND 5V VCC 11~ M2 - A 10~ M2 - B 5~ M1 - B 6~ M1 - A //Declaramos los pines de salida, deben ser pines PWM si queremos //contorlar la velocidad de los motores const int M1A = 6 ; const int M1B = 5 ; const int M2A = 11 ; const int M2B = 10 ; void setup () { //Establecemos los pines como salidas. pinMode ( M1A , OUTPUT ); pinMode ( M1B , OUTPUT ); pinMode ( M2A , OUTPUT ); pinMode ( M2B , OUTPUT ); } void loop (){ //Giramos el motor 1 a maxima velocidad en un sentido analogWrite ( M1A , 255 ); analogWrite ( M1B , 0 ); delay ( 3000 ); //Giramos el motor 1 a maxima velocidad en el sentido contrario analogWrite ( M1A , 0 ); analogWrite ( M1B , 255 ); delay ( 3000 ); //Giramos el motor 2 a maxima velocidad en un sentido analogWrite ( M2A , 255 ); analogWrite ( M2B , 0 ); delay ( 3000 ); //Giramos el motor 2 a maxima velocidad en el sentido contrario analogWrite ( M2A , 0 ); analogWrite ( M2B , 255 ); delay ( 3000 ); } ##Recursos Datasheet Archivos PCB en KiCAD Esquema en PDF Fritzing Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Motor Controller"},{"location":"motor/#elemental-kit-motor-controller","text":"El m\u00f3dulo Motor Controller es una peque\u00f1a placa capaz de controlar 2 motores de corriente continua o un motor paso a paso gracias a sus dos drivers integrados L9110. Puedes controlar motores de corriente continua con un consumo continuado de 800mA con total tranquilidad y puede soportar picos de entre 1.5A y 2A aunque no recomendamos nunca llegar a esas cifras. As\u00ed mismo, el driver tambi\u00e9n incluye diodos de protecci\u00f3n. El m\u00f3dulo cuenta con dos conectores para sus dos respectivos motores, dos pines de alimentaci\u00f3n con los que puedes alimentar el modulo de manera independiente para no da\u00f1ar tu arduino y 4 conectores de se\u00f1al para manejar los motores con tu Grape .","title":"Elemental Kit - Motor Controller"},{"location":"motor/#caracteristicas","text":"F\u00e1cil de contectar 800mA de corriente Capaz de controlar dos motores Tensi\u00f3n de entrada de 2.5V a 12V","title":"Caracter\u00edsticas"},{"location":"motor/#primeros-pasos","text":"Para controlar los motores, podremos usar pines digitales con o sin PWM, la diferencia la tendremos en la capacidad de control de estos. Sin PWM, solo podremos encender o apagar el motor pero en ningun caso podremos controlar la velocidad de los motores. Dependiendo del proyecto en el que est\u00e9s te convendr\u00e1 usarlo de una manera o de otra, por ejemplo, para un robot siguelineas necesitaremos controlar la velocidad para que siga la linea con m\u00e1s suavidad, mientras que para encender un ventilador no tendriamos por que necesitar controlar la velocidad, solo su encendido. El funcionamiento del controlador es el siguiente: M1 - A M1 - B Motor 1 LOW LOW APAGADO HIGH LOW ADELANTE LOW HIGH ATR\u00c1S HIGH HIGH APAGADO M2 - A M2 - B Motor 2 LOW LOW APAGADO HIGH LOW ADELANTE LOW HIGH ATR\u00c1S HIGH HIGH APAGADO","title":"##Primeros pasos"},{"location":"motor/#grape","text":"Ya que nuestra placa Grape puede aguantar hasta 2A de corriente, puedes conectar sin problemas la alimentaci\u00f3n del m\u00f3dulo directamente a los 5V de la placa. En el caso de necesitar m\u00e1s velocidad o no disponer de una placa que aguante esta corriente, recomedamos que lo alimentes a parte compartiendo las tierras, tal y como describe siguiente diagrama: Grape Elemental - Motor Gontroller GND GND 5V VCC 11~ M2 - A 10~ M2 - B 5~ M1 - B 6~ M1 - A //Declaramos los pines de salida, deben ser pines PWM si queremos //contorlar la velocidad de los motores const int M1A = 6 ; const int M1B = 5 ; const int M2A = 11 ; const int M2B = 10 ; void setup () { //Establecemos los pines como salidas. pinMode ( M1A , OUTPUT ); pinMode ( M1B , OUTPUT ); pinMode ( M2A , OUTPUT ); pinMode ( M2B , OUTPUT ); } void loop (){ //Giramos el motor 1 a maxima velocidad en un sentido analogWrite ( M1A , 255 ); analogWrite ( M1B , 0 ); delay ( 3000 ); //Giramos el motor 1 a maxima velocidad en el sentido contrario analogWrite ( M1A , 0 ); analogWrite ( M1B , 255 ); delay ( 3000 ); //Giramos el motor 2 a maxima velocidad en un sentido analogWrite ( M2A , 255 ); analogWrite ( M2B , 0 ); delay ( 3000 ); //Giramos el motor 2 a maxima velocidad en el sentido contrario analogWrite ( M2A , 0 ); analogWrite ( M2B , 255 ); delay ( 3000 ); }","title":"Grape"},{"location":"motor/#recursos","text":"Datasheet Archivos PCB en KiCAD Esquema en PDF Fritzing","title":"##Recursos"},{"location":"motor/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"motor/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"oled/","text":"","title":"Pantalla Oled"},{"location":"otros/","text":"","title":"Otros"},{"location":"pot/","text":"Elemental Kit - Potenci\u00f3metro El m\u00f3dulo de potenci\u00f3metro consta de un potenci\u00f3metro de 10k conectado directamente al conector JST, es la manera m\u00e1s sencilla de a\u00f1adir r\u00e1pidamente un controlador de este tipo a tus proyectos. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape . Caracter\u00edsticas M\u00f3dulo f\u00e1cil de usar Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye el divisor resistivo ##Primeros pasos Grape Grape Elemental - Potenci\u00f3metro GND Negro 5V Rojo A2 Amarillo void setup () { //Inicializamos el puerto serie 9600 baudios Serial . begin ( 9600 ); } void loop (){ // Leemos el potenci\u00f3metro y lo asignamos a la variable potenciometro potenciometro = analogRead ( A2 ); Serial . print ( \"El nivel es de: \" ); Serial . println ( potenciometro ); } ##Recursos Archivos PCB en KiCAD Esquema en PDF Fritzing Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Potenci\u00f3metro"},{"location":"pot/#elemental-kit-potenciometro","text":"El m\u00f3dulo de potenci\u00f3metro consta de un potenci\u00f3metro de 10k conectado directamente al conector JST, es la manera m\u00e1s sencilla de a\u00f1adir r\u00e1pidamente un controlador de este tipo a tus proyectos. El conector de salida es el correspondiente JST-PH de 2.0mm compatible con los cables para la Grape .","title":"Elemental Kit - Potenci\u00f3metro"},{"location":"pot/#caracteristicas","text":"M\u00f3dulo f\u00e1cil de usar Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Incluye el divisor resistivo","title":"Caracter\u00edsticas"},{"location":"pot/#primeros-pasos","text":"","title":"##Primeros pasos"},{"location":"pot/#grape","text":"Grape Elemental - Potenci\u00f3metro GND Negro 5V Rojo A2 Amarillo void setup () { //Inicializamos el puerto serie 9600 baudios Serial . begin ( 9600 ); } void loop (){ // Leemos el potenci\u00f3metro y lo asignamos a la variable potenciometro potenciometro = analogRead ( A2 ); Serial . print ( \"El nivel es de: \" ); Serial . println ( potenciometro ); }","title":"Grape"},{"location":"pot/#recursos","text":"Archivos PCB en KiCAD Esquema en PDF Fritzing","title":"##Recursos"},{"location":"pot/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"pot/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"raspberry/","text":"Rasberry Pi","title":"Raspberry Pi"},{"location":"raspberry/#rasberry-pi","text":"","title":"Rasberry Pi"},{"location":"rgb/","text":"Elemental Kit - RGB El m\u00f3dulo de RGB cuenta con un led 5050 RGB con el que podr\u00e1s generar hasta 16 millones de colores! Simplemente conecta cada pin de color a un pin con PWM de tu Grape si quieres control total sobre el color y cambia los valores para ver que sucede. Caracter\u00edsticas M\u00f3dulo f\u00e1cil de usar Utiliza la conexion GND/RED/GREEN/BLUE Incluye sus respectivas resistencias por cada color ##Primeros pasos Grape Grape Elemental - RGB GND Negro D9 Rojo D10 GREEN D11 BLUE const int RED = 9 ; const int GREEN = 10 ; const int BLUE = 11 ; void setup () { pinMode ( RED , OUTPUT ); pinMode ( GREEN , OUTPUT ); pinMode ( BLUE , OUTPUT ); } void loop (){ digitalWrite ( BLUE , LOW ); digitalWrite ( RED , HIGH ); delay ( 1000 ); digitalWrite ( RED , LOW ); digitalWrite ( GREEN , HIGH ); delay ( 1000 ); digitalWrite ( GREEN , LOW ); digitalWrite ( BLUE , HIGH ); delay ( 1000 ); } ##Recursos Archivos PCB en KiCAD Esquema en PDF Fritzing Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Led RGB"},{"location":"rgb/#elemental-kit-rgb","text":"El m\u00f3dulo de RGB cuenta con un led 5050 RGB con el que podr\u00e1s generar hasta 16 millones de colores! Simplemente conecta cada pin de color a un pin con PWM de tu Grape si quieres control total sobre el color y cambia los valores para ver que sucede.","title":"Elemental Kit - RGB"},{"location":"rgb/#caracteristicas","text":"M\u00f3dulo f\u00e1cil de usar Utiliza la conexion GND/RED/GREEN/BLUE Incluye sus respectivas resistencias por cada color","title":"Caracter\u00edsticas"},{"location":"rgb/#primeros-pasos","text":"","title":"##Primeros pasos"},{"location":"rgb/#grape","text":"Grape Elemental - RGB GND Negro D9 Rojo D10 GREEN D11 BLUE const int RED = 9 ; const int GREEN = 10 ; const int BLUE = 11 ; void setup () { pinMode ( RED , OUTPUT ); pinMode ( GREEN , OUTPUT ); pinMode ( BLUE , OUTPUT ); } void loop (){ digitalWrite ( BLUE , LOW ); digitalWrite ( RED , HIGH ); delay ( 1000 ); digitalWrite ( RED , LOW ); digitalWrite ( GREEN , HIGH ); delay ( 1000 ); digitalWrite ( GREEN , LOW ); digitalWrite ( BLUE , HIGH ); delay ( 1000 ); }","title":"Grape"},{"location":"rgb/#recursos","text":"Archivos PCB en KiCAD Esquema en PDF Fritzing","title":"##Recursos"},{"location":"rgb/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"rgb/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"servo/","text":"Elemental Kit - Mini servo El mini-servo ES08MA-II es tu perfecto aliado para tus primeros proyectos. Gracias a sus engranajes de metal, ser\u00e1s capaz de girar grandes cargas sin esfuerzo. \u00dasalo para hacer un barrido con un sensor o para abrir una puerta en una maqueta. \u00a1Las posibilidades son infinitas! El conector de salida es un FUT/JR de 2.54mm compatible con los pines de conexi\u00f3n r\u00e1pida de la Grape . Caracter\u00edsticas Recorrido: 180\u00ba Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Engranajes internos de metal Torque: 1.8Kg/CM a 6V Vista interior ##Primeros pasos Grape Grape Elemental - MiniServo GND Marr\u00f3n 5V Rojo D9 Naranja #include <Servo.h> Servo miniServo ; // Creamos un objeto servo para controlar el mini-servo int posicion = 0 ; // variable para guardar la posicion del servo void setup () { miniServo . attach ( 9 ); // adjuntamos el servo al pin 9 Serial . begin ( 9600 ); // Iniciamos el puerto serie para imprimir la posicion del servo (opcional) } void loop () { for ( posicion = 0 ; posicion <= 180 ; posicion += 1 ) { // Recorremos de 0 a 180 con la variable posicion de grando en grado miniServo . write ( posicion ); // aplicamos la posicion al servo Serial . println ( posicion ); // Imprimimos la posicion del servo (opcional) delay ( 15 ); // esperamos 15ms para que al servo le de tiempo a alcanzar la posicion } for ( posicion = 180 ; posicion >= 0 ; posicion -= 1 ) { // Recorremos de 180 a 0 con la variable posicion de grando en grado miniServo . write ( posicion ); // aplicamos la posicion al servo Serial . println ( posicion ); // Imprimimos la posicion del servo (opcional) delay ( 15 ); // esperamos 15ms para que al servo le de tiempo a alcanzar la posicion } } ##Recursos Web del fabricante Datasheet Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Servo"},{"location":"servo/#elemental-kit-mini-servo","text":"El mini-servo ES08MA-II es tu perfecto aliado para tus primeros proyectos. Gracias a sus engranajes de metal, ser\u00e1s capaz de girar grandes cargas sin esfuerzo. \u00dasalo para hacer un barrido con un sensor o para abrir una puerta en una maqueta. \u00a1Las posibilidades son infinitas! El conector de salida es un FUT/JR de 2.54mm compatible con los pines de conexi\u00f3n r\u00e1pida de la Grape .","title":"Elemental Kit - Mini servo"},{"location":"servo/#caracteristicas","text":"Recorrido: 180\u00ba Utiliza la cl\u00e1sica conexi\u00f3n \"GND/VCC/SIG\" Engranajes internos de metal Torque: 1.8Kg/CM a 6V","title":"Caracter\u00edsticas"},{"location":"servo/#vista-interior","text":"","title":"Vista interior"},{"location":"servo/#primeros-pasos","text":"","title":"##Primeros pasos"},{"location":"servo/#grape","text":"Grape Elemental - MiniServo GND Marr\u00f3n 5V Rojo D9 Naranja #include <Servo.h> Servo miniServo ; // Creamos un objeto servo para controlar el mini-servo int posicion = 0 ; // variable para guardar la posicion del servo void setup () { miniServo . attach ( 9 ); // adjuntamos el servo al pin 9 Serial . begin ( 9600 ); // Iniciamos el puerto serie para imprimir la posicion del servo (opcional) } void loop () { for ( posicion = 0 ; posicion <= 180 ; posicion += 1 ) { // Recorremos de 0 a 180 con la variable posicion de grando en grado miniServo . write ( posicion ); // aplicamos la posicion al servo Serial . println ( posicion ); // Imprimimos la posicion del servo (opcional) delay ( 15 ); // esperamos 15ms para que al servo le de tiempo a alcanzar la posicion } for ( posicion = 180 ; posicion >= 0 ; posicion -= 1 ) { // Recorremos de 180 a 0 con la variable posicion de grando en grado miniServo . write ( posicion ); // aplicamos la posicion al servo Serial . println ( posicion ); // Imprimimos la posicion del servo (opcional) delay ( 15 ); // esperamos 15ms para que al servo le de tiempo a alcanzar la posicion } }","title":"Grape"},{"location":"servo/#recursos","text":"Web del fabricante Datasheet","title":"##Recursos"},{"location":"servo/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"servo/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"},{"location":"sharp/","text":"Elemental Kit - Sensor de distancia infrarrojo Los sensores de distancia Sharp son una buena opci\u00f3n para muchos proyectos que necesitan mediciones precisas de distancia. De toda la gama de sensores infrarrojos de distanca que Sharp fabrica, hemos optado por usar el GP2Y0A21YK0F debido a su sencillez de uso y a que posee un rango de medici\u00f3n (10-80cm) aplicable en la mayoria de proyectos de rob\u00f3tica amateur. La conexion de este sensor es bastante sencilla, siemplemente tienes que conectar la alimentaci\u00f3n y la salida de se\u00f1al a un pin con conversor analogico-digital de tu microcontrolador favorito. Para facilitar la tarea, hemos a\u00f1adido un cable compatible con la placa Grape , pero cuidado, \u00a1Este cable tiene los pines de Vcc y GND invertidos! \u00a1No emplees este cable para conectar otros m\u00f3dulos Elemental! Caracter\u00edsticas Modelo: GP2Y0A21YK0F Tensi\u00f3n de funcionamiento: 4.5V - 5.5V Consumo: 30mA Rango de medici\u00f3n: 10cm - 80cm Tipo de salida: Anal\u00f3gica Tiempo de respuesta: 38 \u00b1 10 ms Medidas: 29.5\u00d713\u00d713.5 mm Peso: 3.5g ##Primeros pasos Grape El GP2Y0A21YK0F es un sensor de distancia de tipo infrarrojo. Esta compuesto por un led IR y un dispositivo detector de posici\u00f3n (PSD). El emisor infrarrojo emite un haz de luz pulsante. El haz rebota en el objeto y vuelve para ser captado por el PSD el cual mide la distancia por triangulaci\u00f3n. El sensor devuelve un valor de tensi\u00f3n no lineal representado por esta gr\u00e1fica, es por ello que tendremos que interpolar. Hemos optado por el uso de una librer\u00eda que te facilita la tarea, ya que realizar ese c\u00e1lculo matem\u00e1tico exceder\u00eda la dificultad que buscamos con el Elemental Kit. Si quieres aprender a usar el sensor interpolando y no quieres usar la librer\u00eda hay multitud de tutoriales como este en internet. La librer\u00eda que vamos a usar es de Giuseppe Masino y la podeis encontrar en el gestor de librer\u00edas oficial de Arduino dentro del men\u00fa Programa > Incluir Librer\u00eda > Gestor de librerias bajo el nombre de \"SharpIR\" Conexi\u00f3n Grape Elemental - Sensor de distancia GND Negro 5V Rojo A2 Amarillo #include <SharpIR.h> //Incluimos la libreria //Creamos una nueva instancia y la llamamos sensor SharpIR sensor ( GP2Y0A21YK0F , A2 ); //Introducimos el pin y el modelo del sensor void setup () { Serial . begin ( 9600 ); //Iniciamos el puerto serie a 9600 baudios } void loop () { int distance = sensor . getDistance (); //Declaramos una variable para almacenar la distancia Serial . println ( distance ); //Imprimimos la distacia por el puerto serie. } ##Recursos Datasheet Librer\u00eda Licencia Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License . Soporte T\u00e9cnico Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Sensor de distancia"},{"location":"sharp/#elemental-kit-sensor-de-distancia-infrarrojo","text":"Los sensores de distancia Sharp son una buena opci\u00f3n para muchos proyectos que necesitan mediciones precisas de distancia. De toda la gama de sensores infrarrojos de distanca que Sharp fabrica, hemos optado por usar el GP2Y0A21YK0F debido a su sencillez de uso y a que posee un rango de medici\u00f3n (10-80cm) aplicable en la mayoria de proyectos de rob\u00f3tica amateur. La conexion de este sensor es bastante sencilla, siemplemente tienes que conectar la alimentaci\u00f3n y la salida de se\u00f1al a un pin con conversor analogico-digital de tu microcontrolador favorito. Para facilitar la tarea, hemos a\u00f1adido un cable compatible con la placa Grape , pero cuidado, \u00a1Este cable tiene los pines de Vcc y GND invertidos! \u00a1No emplees este cable para conectar otros m\u00f3dulos Elemental!","title":"Elemental Kit - Sensor de distancia infrarrojo"},{"location":"sharp/#caracteristicas","text":"Modelo: GP2Y0A21YK0F Tensi\u00f3n de funcionamiento: 4.5V - 5.5V Consumo: 30mA Rango de medici\u00f3n: 10cm - 80cm Tipo de salida: Anal\u00f3gica Tiempo de respuesta: 38 \u00b1 10 ms Medidas: 29.5\u00d713\u00d713.5 mm Peso: 3.5g","title":"Caracter\u00edsticas"},{"location":"sharp/#primeros-pasos","text":"","title":"##Primeros pasos"},{"location":"sharp/#grape","text":"El GP2Y0A21YK0F es un sensor de distancia de tipo infrarrojo. Esta compuesto por un led IR y un dispositivo detector de posici\u00f3n (PSD). El emisor infrarrojo emite un haz de luz pulsante. El haz rebota en el objeto y vuelve para ser captado por el PSD el cual mide la distancia por triangulaci\u00f3n. El sensor devuelve un valor de tensi\u00f3n no lineal representado por esta gr\u00e1fica, es por ello que tendremos que interpolar. Hemos optado por el uso de una librer\u00eda que te facilita la tarea, ya que realizar ese c\u00e1lculo matem\u00e1tico exceder\u00eda la dificultad que buscamos con el Elemental Kit. Si quieres aprender a usar el sensor interpolando y no quieres usar la librer\u00eda hay multitud de tutoriales como este en internet. La librer\u00eda que vamos a usar es de Giuseppe Masino y la podeis encontrar en el gestor de librer\u00edas oficial de Arduino dentro del men\u00fa Programa > Incluir Librer\u00eda > Gestor de librerias bajo el nombre de \"SharpIR\"","title":"Grape"},{"location":"sharp/#conexion","text":"Grape Elemental - Sensor de distancia GND Negro 5V Rojo A2 Amarillo #include <SharpIR.h> //Incluimos la libreria //Creamos una nueva instancia y la llamamos sensor SharpIR sensor ( GP2Y0A21YK0F , A2 ); //Introducimos el pin y el modelo del sensor void setup () { Serial . begin ( 9600 ); //Iniciamos el puerto serie a 9600 baudios } void loop () { int distance = sensor . getDistance (); //Declaramos una variable para almacenar la distancia Serial . println ( distance ); //Imprimimos la distacia por el puerto serie. }","title":"Conexi\u00f3n"},{"location":"sharp/#recursos","text":"Datasheet Librer\u00eda","title":"##Recursos"},{"location":"sharp/#licencia","text":"Copyright \u00a9 2018-2017 Frizzy Electronics. ( https://www.frizzy.es ). Todo el texto y las fotograf\u00edas bajo licencia Creative Commons Attribution-ShareAlike 4.0 International License .","title":"Licencia"},{"location":"sharp/#soporte-tecnico","text":"Por favor, comunicanos cualquier incidencia para poder mejorar juntos. Escribenos a frizzy.info@gmail.com .","title":"Soporte T\u00e9cnico"}]}